CXX_STD = CXX11

PKGROOT=.

# USE_SOCKET: should only be used if not using MPI
# -Wno-known-pragmas: only used witgh Clang or gcc
LGB_RFLAGS = \
    -fPIC \
    -funroll-loops \
    -DLGB_R_BUILD \
    -DR_VER_ABOVE_35 \
    -DUSE_SOCKET \
    -Wno-unknown-pragmas

# disable the use of thread_local for 32 bit windows:
# ifeq ($(R_OSTYPE)$(WIN),windows)
#     XGB_RFLAGS += -DDMLC_CXX11_THREAD_LOCAL=0
# endif
# $(foreach v, $(XGB_RFLAGS), $(warning $(v)))

PKG_CPPFLAGS = -I$(PKGROOT)/src/include -I$(PKGROOT)/include $(LGB_RFLAGS)
PKG_CXXFLAGS= @OPENMP_CXXFLAGS@ @ENDIAN_FLAG@ -pthread
PKG_LIBS = @OPENMP_CXXFLAGS@ @OPENMP_LIB@ @ENDIAN_FLAG@ @BACKTRACE_LIB@ -pthread

OBJECTS = \
    application/application.o \
    boosting/boosting.o \
    boosting/gbdt.o \
    boosting/gbdt_model_text.o \
    boosting/gbdt_prediction.o \
    boosting/prediction_early_stop.o \
    io/bin.o \
    io/config.o \
    io/config_auto.o \
    io/dataset.o \
    io/dataset_loader.o \
    io/file_io.o \
    io/json11.o \
    io/metadata.o \
    io/parser.o \
    io/tree.o \
    metric/dcg_calculator.o \
    metric/metric.o \
    objective/objective_function.o \
    network/linker_topo.o \
    network/linkers_mpi.o \
    network/linkers_socket.o \
    network/network.o \
    treelearner/data_parallel_tree_learner.o \
    treelearner/feature_parallel_tree_learner.o \
    treelearner/gpu_tree_learner.o \
    treelearner/serial_tree_learner.o \
    treelearner/tree_learner.o \
    treelearner/voting_parallel_tree_learner.o \
    c_api.o \
    lightgbm_R.o

# ./xgboost_R.o ./xgboost_custom.o ./xgboost_assert.o ./init.o\
#          $(PKGROOT)/amalgamation/xgboost-all0.o $(PKGROOT)/amalgamation/dmlc-minimum0.o\
#          $(PKGROOT)/rabit/src/engine_empty.o $(PKGROOT)/rabit/src/c_api.o
